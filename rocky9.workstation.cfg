install
# BaseOS repository (already defined in kernel call or here)
repo --name=BaseOS --baseurl=http://download.rockylinux.org/pub/rocky/9/BaseOS/x86_64/os/

# AppStream repository
repo --name=AppStream --baseurl=http://download.rockylinux.org/pub/rocky/9/AppStream/x86_64/os/

# EPEL repository (example)
repo --name=epel --baseurl=https://download.fedoraproject.org/pub/epel/9/Everything/x86_64/

# CRB repository
repo --name=crb --baseurl=http://download.rockylinux.org/pub/rocky/9/CRB/x86_64/os/

# add group because of brltty
group --name brlapi

# System services
services --enabled="chronyd,brltty"

# System bootloader configuration
bootloader --append=" crashkernel=auto" --location=mbr --boot-drive=sda 

# Partition clearing information
clearpart --all --drives=sda
part /boot --fstype=ext4 --size=500
part / --fstype=ext4 --size=1 --grow
part swap --fstype=swap --size=4096

# Use text install
text

# Install source
url --url="https://dl.rockylinux.org/pub/rocky/9/BaseOS/x86_64/os/"
#cdrom #FAST - Choose this option for a faster local install from cdrom or ISO.

# Keyboard layouts
keyboard --vckeymap=us --xlayouts='us'

# System language
lang en_US.UTF-8

# License agreement
eula --agreed

# Network information
network --onboot=yes --bootproto=dhcp --activate --hostname=rocky.localdomain

# Create root user
rootpw --iscrypted $6$INireMy4ZLQwW7NN$btkLm/dwn9qV/XWW8dhDd2hjKHk8tj59q.Q8qSW7i4LojhPYWXDx4YRWxXQ/.30E8ND3IcImJ.pys3DyYwco0.

# Create additional users
#user --name=admin --groups=wheel --password=$6$f9y8RhpOf4kppQlt$FpXm5aOecAV8Hf9DQM4/gHMD.EPbkacI36OQEyS50Iqs0Y2fLnOWeEPGXDhaVZjHpNF4RhEdyRDxBDByffCGH/ --iscrypted --gecos="Administrator"

# Run the Setup Agent on first boot
firstboot --disable

# System services
services --enabled="chronyd"

# System timezone
timezone America/Chicago --utc		# CST | UTCâˆ’06:00

%packages
@MATE
@desktop-accessibility
@base
@core
@network-tools
@system-tools
@security-tools
@cockpit
@multimedia
ntp
cronie
vim
wget
python3
rsync
git
curl
iproute2
lsof
top
logrotate
createrepo
genisoimage
isomd5sum
nss-tools
policycoreutils-python-utils
syslinux
yum-utils
geany
ffmpeg
vlc
sox
lame
orca
speech-dispatcher
speech-tools
espeak-ng
NetworkManager
# some apps from mate-applications
caja-actions
mate-disk-usage-analyzer

# office
@libreoffice
thunderbird
pidgin
mate-menu
#hardware support
@hardware-support
cups
gutenprint-cups
cups-filters
foomatic-db
foomatic-db-ppds
splix
hplip
xorg-x11-drv-nouveau
libsane-hpaio
xorg-x11-server-Xvfb
xorg-x11-drv-dummy
#more software
exfat-utils
audacity
alsa-utils
soundconverter
@vlc
speech-dispatcher-utils
soundconverter
tmux
#display manager
-slick-greeter
-slick-greeter-mate
lightdm-gtk-greeter
lightdm-gtk-greeter-settings
#ocr
lios
# pandoc for document conversion
pandoc
%end

# The state of the machine after the install completes. Leave commented for no action.
#shutdown
#reboot

# Post nochroot
%post --interpreter=/usr/bin/bash --nochroot --log=/mnt/sysimage/root/ks-post.log

# Configure SELinux
setenforce 0
# Make sure it stays permissive. (ignorant we have to do this...)
sed -i 's/SELINUX=enforcing/SELINUX=permissive/' /etc/selinux/config

# Set MATE as default session
sed -i 's/^#user-session=.*/user-session=mate/' /etc/lightdm/lightdm.conf

# Update dconf databases
echo "Updating dconf databases..."
dconf update

# Enable general accessibility
cat > /etc/profile.d/qtaccessibility.sh <<EOM
# Enable general accessibility according to https://www.freedesktop.org/wiki/Accessibility/AT-SPI2/
export GTK_MODULES=gail:atk-bridge
export OOO_FORCE_DESKTOP=gnome
export GNOME_ACCESSIBILITY=1
# Enables QT5 accessibility system-wide
export QT_ACCESSIBILITY=1
export QT_LINUX_ACCESSIBILITY_ALWAYS_ON=1
EOM

# Configure speech dispatcher
sed -i 's/^#AddModule "espeak-ng"                "sd_espeak-ng" "espeak-ng.conf"/AddModule "espeak-ng"                "sd_espeak-ng" "espeak-ng.conf"/' /etc/speech-dispatcher/speechd.conf

# Prevent long delay when shutting down
echo "DefaultTimeoutStopSec=10s" >> /etc/systemd/system.conf

# Setup lightdm
# Create a wrapper script which makes sure that sound is unmuted and at 50% on login screen
cat > /usr/local/bin/orca-login-wrapper <<EOM
#!/bin/bash

amixer -c 0 set Master playback 50% unmute
/usr/bin/orca &

EOM
chmod 755 /usr/local/bin/orca-login-wrapper

cat >> /etc/lightdm/lightdm-gtk-greeter.conf <<EOM
[greeter]
background = /usr/share/backgrounds/default.png
reader = /usr/local/bin/orca-login-wrapper
a11y-states = +reader
EOM

# Update the system
dnf update -y

# Upgrade pip
python3 -m pip install --upgrade pip

# Create the autostart directory in /etc/skel
mkdir -p /etc/skel/.config/autostart

# Create a .desktop file to start Orca on login in /etc/skel
cat <<EOF > /etc/skel/.config/autostart/orca.desktop
[Desktop Entry]
Name=Orca Screen Reader
Comment=Screen reader for visually impaired users
Exec=orca
Icon=orca
Terminal=false
Type=Application
Categories=Accessibility;
EOF

# Set the correct permissions for the .desktop file
chmod 644 /etc/skel/.config/autostart/orca.desktop

# Create the Orca systemd service file
cat << EOF > /etc/systemd/system/orca-at-boot.service
[Unit]
Description=Start Orca Screen Reader at Boot
After=multi-user.target

[Service]
Type=simple
User=root
ExecStart=/usr/bin/orca
Restart=on-failure

[Install]
WantedBy=multi-user.target
EOF

# Enable and start the Orca service
systemctl enable orca-at-boot.service
systemctl start orca-at-boot.service

# Create a custom .bashrc file
cat <<EOF > /etc/skel/.bashrc
# ~/.bashrc: executed by bash(1) for non-login shells.

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# Set the default editor to nano
export EDITOR=nano

# Define some aliases
alias ll='ls -la'
alias grep='grep --color=auto'

# Prompt customization
PS1='\u@\h:\w\$ '

# Source global definitions
if [ -f /etc/bashrc ]; then
    . /etc/bashrc
fi
EOF

# Set the correct permissions for the .bashrc file
chmod 644 /etc/skel/.bashrc

# Create a custom .bash_profile file
cat <<EOF > /etc/skel/.bash_profile
# ~/.bash_profile

# Get the aliases and functions
if [ -f ~/.bashrc ]; then
    . ~/.bashrc
fi

# User specific environment and startup programs
PATH=$PATH:$HOME/bin

export PATH
EOF

# Set the correct permissions for the .bash_profile file
chmod 644 /etc/skel/.bash_profile

# Create a custom .profile file
cat <<EOF > /etc/skel/.profile
# ~/.profile

# Get the aliases and functions
if [ -f ~/.bashrc ]; then
    . ~/.bashrc
fi

# Set the default editor
export EDITOR=nano
EOF

# Set the correct permissions for the .profile file
chmod 644 /etc/skel/.profile

# Create a custom .config/dconf/user directory for MATE settings
mkdir -p /etc/skel/.config/dconf/user

# Get the terminal profile UUID
UUID=$(gsettings get org.mate.terminal.profiles | tr -d "[]'" | cut -d ',' -f 1)

# Create the dconf file with the correct UUID
cat << EOF > /etc/skel/.config/dconf/user
[org/mate/desktop/a11y/applications]
screen-reader-enabled=true

[org/mate/desktop/applications/at/visual]
exec='orca'

[org/mate/desktop/interface]
accessibility=true

[org/mate/desktop/sound]
theme-name='freedesktop'
event-sounds=true

[org/mate/panel/general]
object-id-list=['menu-bar', 'terminal', 'web-browser', 'email-client', 'volume-control', 'notification-area', 'show-desktop', 'window-list', 'object-0']
toplevel-id-list=['top']

[org/mate/panel/objects/clock]
applet-iid='ClockAppletFactory::ClockApplet'
locked=true
object-type='applet'
panel-right-stick=true
position=0
toplevel-id='top'

[org/mate/panel/objects/email-client]
launcher-location='/usr/share/applications/mozilla-thunderbird.desktop'
locked=true
object-type='launcher'
position=40
toplevel-id='top'

[org/mate/panel/objects/file-browser]
launcher-location='/usr/share/applications/caja-browser.desktop'
locked=true
object-type='launcher'
position=10
toplevel-id='top'

[org/mate/panel/objects/menu-bar]
locked=true
object-type='menu-bar'
position=0
toplevel-id='top'

[org/mate/panel/objects/notification-area]
applet-iid='NotificationAreaAppletFactory::NotificationArea'
locked=true
object-type='applet'
panel-right-stick=true
position=10
toplevel-id='top'

[org/mate/panel/objects/terminal]
launcher-location='/usr/share/applications/mate-terminal.desktop'
locked=true
object-type='launcher'
position=20
toplevel-id='top'

[org/mate/panel/objects/web-browser]
launcher-location='/usr/share/applications/firefox.desktop'
locked=true
object-type='launcher'
position=30
toplevel-id='top'

[org/mate/panel/objects/object-0]
applet-iid='MateMenuAppletFactory::MateMenuApplet'
object-type='applet'
panel-right-stick=false
position=-1
toplevel-id='top'

[org/gnome/desktop/wm/keybindings]
begin-move=@as []
begin-resize=@as []
close=['<Alt>F4']
lower=@as []
maximize=@as []
maximize-horizontally=@as []
maximize-vertically=@as []
move-to-monitor-left=['<Super>Left']
move-to-monitor-right=['<Super>Right']
move-to-workspace-1=['<Shift><Alt>F1']
move-to-workspace-2=['<Shift><Alt>F2']
move-to-workspace-3=['<Shift><Alt>F3']
move-to-workspace-4=['<Shift><Alt>F4']
move-to-workspace-down=['<Primary><Super>Down', '<Control><Shift><Alt>Down']
move-to-workspace-left=['<Primary><Super>Left']
move-to-workspace-right=['<Primary><Super>Right']
move-to-workspace-up=['<Primary><Super>Up', '<Control><Shift><Alt>Up']
raise=@as []
raise-or-lower=@as []
show-desktop=['<Super>d']
switch-applications=['', '<Alt>Tab']
switch-group=['<Super>Tab', '<Alt>Above_Tab']
switch-to-workspace-down=['<Primary><Alt>Down', '<Control><Alt>Down']
switch-to-workspace-left=['<Primary><Alt>Left']
switch-to-workspace-right=['<Primary><Alt>Right']
switch-to-workspace-up=['<Primary><Alt>Up', '<Control><Alt>Up']
switch-windows=['<Alt>Tab']
toggle-maximized=@as []
toggle-on-all-workspaces=@as []
toggle-shaded=@as []
unmaximize=@as []

[org/mate/caja/preferences]
preview-sound='never'

[org/mate/settings-daemon/plugins/media-keys]
screenreader='<Alt><Mod4>s'

[org/mate/desktop/keybindings/nymph-firefox]
action='firefox'
binding='<Alt><Mod4>f'
name='Firefox'

[org/mate/desktop/keybindings/nymph-mate-terminal]
action='mate-terminal'
binding='<Primary><Alt>t'
name='Launch terminal'

[org/mate/desktop/keybindings/nymph-volume-up]
action='sh -c "wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+ && play /usr/share/sounds/freedesktop/stereo/audio-volume-change.oga"'
binding='<Alt><Mod4>Up'
name='Volume up'

[org/mate/desktop/keybindings/nymph-volume-down]
action='sh -c "wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%- && play /usr/share/sounds/freedesktop/stereo/audio-volume-change.oga"'
binding='<Alt><Mod4>Down'
name='Volume down'

[org/mate/desktop/keybindings/nymph-volumemute]
action='sh -c "wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle && play /usr/share/sounds/freedesktop/stereo/audio-volume-change.oga"'
binding='<Alt><Mod4>Left'
name='Toggle mute'

[org/mate/desktop/keybindings/nymph-home]
action='caja .'
binding='<Mod4>Home'
name='Home folder'

[org/mate/desktop/keybindings/nymph-restart-orca]
action='orca -r'
binding='<Alt><Mod4>o'
name='Restart Orca'
EOF

# Set the correct permissions for the dconf file
chmod 644 /etc/skel/.config/dconf/user

# Install EPEL repository and packages
dnf --nogpgcheck -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm

# Enable and start services
systemctl enable NetworkManager cockpit.socket
systemctl start NetworkManager cockpit.socket

# Create the brlapi group
groupadd brlapi

# Bring network interfaces up
for i in $(nmcli -g NAME con show); do nmcli con up "$i"; done;

# Create the root user's .config/dconf/user directory
mkdir -p /root/.config/dconf/user

# Copy the dconf settings to the root user's home directory
cp /etc/skel/.config/dconf/user /root/.config/dconf/user

# Set the correct permissions for the root user's dconf file
chmod 644 /root/.config/dconf/user

# Generate the hashed password
HASHED_PASSWORD=$(openssl passwd -6 "password")

# Set the hashed password for the root user
usermod -p "$HASHED_PASSWORD" root
sed -i 's/PermitRootLogin no/PermitRootLogin yes/' /etc/ssh/sshd_config

# Create the user with the specified home directory and shell
useradd -m -d /home/rocky -s /bin/bash rocky

# Set the hashed password for the user
usermod -p "$HASHED_PASSWORD" rocky

# Add the user to the wheel group
usermod -aG wheel rocky

%end
